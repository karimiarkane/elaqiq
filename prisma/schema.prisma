// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id        Int      @id @default(autoincrement())
  lastName      String
  firstName      String
  age   String
  contact String
  workstation  Workstation
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  attendance Attendance[]
  leaves     Leave[]
}

model Attendance {
  id         Int      @id @default(autoincrement())
  date       DateTime
  status     Status
  employee   Employee @relation(fields: [employeeId], references: [id] , onDelete: Cascade)

  employeeId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@unique([employeeId, date])
}

model Leave {
  id         Int      @id @default(autoincrement())
  startDate  DateTime
  endDate    DateTime
  reason     String?
  employee   Employee @relation(fields: [employeeId], references: [id] , onDelete: Cascade)
  employeeId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
model Admin {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
}


enum Workstation {
  deleguation
  vente
}

enum Status {
  present
  absent
  conge
}